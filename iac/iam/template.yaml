Description: "Create a CloudFormation Git Sync Role (v1.2.0)"
Parameters:
  # General Configuration
  SuggestedStackName:
    Type: "String"
    Description: "If creating through the AWS Console, this is the suggested stack name.  Copy and paste this value for the stack name."
    Default: "infra-rest-api-sync-role-stack"
  RoleBaseName:
    Type: "String"
    Description: "The base name for the role that we are creating."
    Default: "git-sync-role"

Resources:
  GitSyncRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${RoleBaseName}-${AWS::Region}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "cloudformation.amazonaws.com" 
            - "cloudformation.sync.codeconnections.amazonaws.com"
            - "ec2.amazonaws.com"
            - "rds.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Policies:
      - PolicyName: "SetupServiceRole"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
            - "events:*"
            Resource: "*"
          - Effect: "Allow"
            Action:
            - "codestar-connections:*"
            Resource: "*"
          - Effect: Allow 
            Action:
            - "rds:CreateDBInstance"
            - "rds:DescribeDBInstances"
            - "rds:DeleteDBInstance"
            - "rds:ModifyDBInstance"
            - "rds:RebootDBInstance"
            - "rds:CreateDBSubnetGroup"
            - "rds:DescribeDBSubnetGroups"
            - "rds:ModifyDBSubnetGroup"
            - "rds:DeleteDBSubnetGroup"
            - "rds:CreateOptionGroup"
            - "rds:DescribeOptionGroups"
            - "rds:ModifyOptionGroup"
            - "rds:DeleteOptionGroup"
            - "rds:CreateDBParameterGroup"
            - "rds:DescribeDBParameterGroups"
            - "rds:ModifyDBParameterGroup"
            - "rds:DeleteDBParameterGroup"
            - "rds:DescribeDBEngineVersions"
            - "rds:DescribeDBClusterSnapshots"
            - "rds:DescribeDBSnapshots"
            - "rds:ListTagsForResource"
            - "rds:AddTagsToResource"
            - "rds:RemoveTagsFromResource"
            Resource: "*"
          - Effect: Allow
            Action:
            - "ec2:DescribeVpcs"
            - "ec2:DescribeSubnets"
            - "ec2:DescribeSecurityGroups"
            - "ec2:DescribeNetworkInterfaces"
            Resource: "*"
          - Effect: Allow
            Action:
            - "cloudformation:CreateStack"
            - "cloudformation:DescribeStacks"
            - "cloudformation:UpdateStack"
            - "cloudformation:DeleteStack"
            - "cloudformation:DescribeStackEvents"
            - "cloudformation:DescribeStackResources"
            Resource: "*"

      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/AWSCloudFormationFullAccess"
      - "arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess"
      - "arn:aws:iam::aws:policy/IAMFullAccess"
      - "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
      - "arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess"
      Tags:
      - Key: "ManagedBy"
        Value: "CloudFormation"
      - Key: "StackName"
        Value: !Ref "AWS::StackName"
  
  MonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MonitoringRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service: "rds.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Policies:
      - PolicyName: "RDSMonitoringPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
            - "logs:PutLogEvents"
            - "logs:CreateLogStream"
            - "logs:CreateLogGroup"
            Resource: "*"
      - PolicyName: "RdsMonitoringPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
                - "ec2:CreateNetworkInterface"
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:DescribeSubnets"
                - "ec2:DeleteNetworkInterface"
                - "ec2:AssignPrivateIpAddresses"
                - "ec2:UnassignPrivateIpAddresses"
                Resource: "*"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess" 
      - "arn:aws:iam::aws:policy/AmazonRDSFullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

Outputs:
  GitSyncRoleName:
    Description: "The role name."
    Value: !Ref GitSyncRole
    Export:
      Name: !Sub "${AWS::StackName}-GitSyncRoleName"
  GitSyncRoleArn:
    Description: "The role ARN."
    Value: !GetAtt GitSyncRole.Arn
    Export:
      Name: !Sub "GitSyncRoleArn"
  MonitoringRoleName:
    Description: "The role name."
    Value: !Ref MonitoringRole
    Export:
      Name: !Sub "${AWS::StackName}-MonitoringRoleName"
  MonitoringRoleArn:
    Description: "The role ARN."
    Value: !GetAtt MonitoringRole.Arn
    Export:
      Name: !Sub "MonitoringRoleArn"
  LambdaExecutionRoleName:
    Description: "The role name."
    Value: !Ref LambdaExecutionRole
    Export:
      Name: !Sub "${AWS::StackName}-LambdaExecutionRoleName"
  LambdaExecutionRoleArn:
    Description: "The role ARN."
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub "LambdaExecutionRoleArn"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "General Configuration"
      Parameters:
      - SuggestedStackName
      - RoleBaseName
    ParameterLabels:
      SuggestedStackName:
        default: "Suggested Stack Name:"
      RoleBaseName:
        default: "Role Base Name:"