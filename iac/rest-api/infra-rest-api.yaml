AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  DBInstanceName:
    Type: String
  DBSecretName:
    Type: String
    Default: "rds-db-credentials"
  ProjectName:
    Type: "String"
    # This gets replaced by the build script
    Default: "rest-api"
  DeploymentBucketName:
    Type: "String"
    # This gets replaced by the build script
    Default: "rest-api-deployment-${AWS::AccountId}-us-east-1"
    Description: Enter the existing AWS bucket were the artifacts for deployment are uploaded.

Resources:
  LandingDataBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-data-landing-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  ArtifactsBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub "${ProjectName}-artifacts-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Prefix: /
            Status: Enabled
            ExpiredObjectDeleteMarker: True
            NoncurrentVersionExpiration:
              NoncurrentDays: 7
      Tags:
        - Key: "datalake"
          Value: !Ref ProjectName

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBInstanceName
      MasterUsername: !GetAtt DBSecret.SecretString.username
      MasterUserPassword: !GetAtt DBSecret.SecretString.password
      Engine: MySQL
      DBInstanceClass: db.t2.micro
      StorageType: gp2
      PubliclyAccessible: True
      AllocatedStorage: "20"
      DBInstanceIdentifier: !Join ["-", [ "rest-api-instance", !Ref "AWS::Region" ]]
      AvailabilityZone: !Select [1, !GetAZs ""]

  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref DBSecretName
      Description: "Credentials for RDS DB instance"
      SecretString: !Sub |
        {
          "username": "${DBInstanceUser}",
          "password": "${DBInstancePass}"
        }

Outputs:
  DBSecretArn:
    Description: "ARN of the Secret storing the DB credentials"
    Value: !Ref DBSecret